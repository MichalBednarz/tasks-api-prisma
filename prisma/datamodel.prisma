type User {
	id: Int! @id
	email: String! @unique
	password: String!
	tasks: [Task!]! @relation
	projects: [Project!]! @relation
	tags: [Tag!]! @relation
}

type Project {
	id: Int! @id
	name: String! @unique
	subprojects: [Subproject!]! @relation(onDelete: CASCADE)
	user: User @relation
}

type Subproject {
	id: Int! @id
	name: String! @unique
	project: Project!
	tasks: [Task!]!
}

type Task {
	id: Int! @id
	name: String!
	priority: String
	comments: String
	repeat: Int
	estimateTime: String
	plannedTime: String
	plannedDate: String
	finishDate: String
	deadlineDate: String
	completed: Boolean! @default(value: false)
	subproject: Subproject
	timelogs: [Timelog!]! @relation(onDelete: CASCADE)
	tags: [Tag!]! @relation
	user: User @relation
}

type Timelog {
	id: Int! @id
	startDate: DateTime
	finishDate: DateTime
	description: String
	task: Task!
}

type Tag {
	id: Int! @id
	name: String! @unique
	user: User @relation
	tasks: [Task!]! @relation
}